# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [backend_automation]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  dl: 
    runs-on: ubuntu-latest
    env: 
      seed: "${{ inputs.seed || 'magnet:?xt=urn:btih:d984f67af9917b214cd8b6048ab5624c7df6a07a&tr=https%3A%2F%2Facademictorrents.com%2Fannounce.php&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce'}} "
    steps:
      - uses: derekn/s5cmd-action@v1
        with:
          version: 2.1.0-beta.1
      - name: Init
        run: |
          echo ${{secrets.INIT}} | base64 -d > init.cred
          echo ${{secrets.OUTPUT}} | base64 -d > output.cred
          # s5cmd --credentials-file init.cred --endpoint-url ${{ secrets.S3_ENDPOINT_URL }} ls s3://aria-config
          s5cmd --credentials-file init.cred --endpoint-url ${{ secrets.S3_ENDPOINT_URL }} cp s3://aria-config/dht.dat .

      - name:  Install package
        run: sudo snap install aria2c
        
      # Runs a set of commands using the runners shell
      - name: show Aria2c info
        run: |
          aria2c -v

      - run: echo "seed:" "${{ env.seed }}"
      - name: dl
        run: |
          aria2c  --seed-time=0 -c --dht-file-path=dht.dat "${{ env.seed }}"
          
      - name: Upload file to bucket
        if: success()
        run: |
          s5cmd --credentials-file init.cred --endpoint-url ${{ secrets.S3_ENDPOINT_URL }} cp dht.dat s3://aria-config/dht.dat 
          # s5cmd --credentials-file output.cred --endpoint-url ${{ secrets.S3_ENDPOINT_URL }} cp --exclude "dht.dat"  --exclude "*.cred" "*" s3://aria-output
          s5cmd --credentials-file output.cred --endpoint-url ${{ secrets.S3_ENDPOINT_URL }} cp  "*" s3://aria-output

